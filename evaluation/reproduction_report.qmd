---
title: "Summary report"
subtitle: "For computational reproducibility assessment of Lim et al. 2020"
format:
  html:
    page-layout: full
echo: False
bibliography: ../quarto_site/references.bib
---
## Study

> Lim CY, Bohn MK, Lippi G, Ferrari M, Loh TP, Yuen K, Adeli K, Horvath AR **Staff Rostering, Split Team Arrangement, Social Distancing (Physical Distancing) and Use of Personal Protective Equipment to Minimize Risk of Workplace Transmission During the COVID-19 Pandemic: A Simulation Study**. *Clinical Biochemistry* 86:15-22 (2020). <https://doi.org/10.1016/j.clinbiochem.2020.09.003>.

This is a discrete-event simulation modelling the transmission of COVID-19 in laboratory. It examines the proportion of staff infected in scenarios varying the: number of shifts per day; number of staff per shift; overall staff pool; shift patterns; secondary attack rate of the virus; introduction of protective measures (social distancing and personal protective equipment). The model is created using Python.

Images from the original study on this page are soruced from @lim_staff_2020

## Computational reproducibility

Successfully reproduced **9 out of 9 (100%)** of items from the scope in **12h 27m (31.1%)**.

Required troubleshooting:

* [List of required changes to code]

::: {.panel-tabset}

## Figure 2

![Original](../original_study/fig2.jpg){width=49% .lightbox}
![Reproduction](../reproduction/outputs/fig2.png){width=49% .lightbox}

## Figure 3

![Original](../original_study/fig3.jpg){width=49% .lightbox}
![Reproduction](../reproduction/outputs/fig3.png){width=49% .lightbox}

## Figure 4

![Original](../original_study/fig4.jpg){width=49% .lightbox}
![Reproduction](../reproduction/outputs/fig4.png){width=49% .lightbox}

## Figure 5

![Original](../original_study/fig5.jpg){width=49% .lightbox}
![Reproduction](../reproduction/outputs/fig5.png){width=49% .lightbox}

## Supplemental Table 2

```{python}
from compare_tables import view_tables

view_tables('../original_study/supp_tab2_reformat.csv',
            '../reproduction/outputs/supp_tab2_reformat.csv')
```

## Supplemental Table 3

```{python}
view_tables('../original_study/supp_tab3_reformat.csv',
            '../reproduction/outputs/supp_tab3_reformat.csv')
```

## Supplemental Table 4

```{python}
view_tables('../original_study/supp_tab4_reformat.csv',
            '../reproduction/outputs/supp_tab4_reformat.csv')
```

## Supplemental Table 5

```{python}
view_tables('../original_study/supp_tab5_reformat.csv',
            '../reproduction/outputs/supp_tab5_reformat.csv')
```

## Supplemental Table 6

```{python}
view_tables('../original_study/supp_tab6_reformat.csv',
            '../reproduction/outputs/supp_tab6_reformat.csv')
```

:::

## Evaluation against guidelines

```{python}
import pandas as pd
import plotly.express as px

# Create dataframe of results
col = ['fully', 'partially', 'not', 'na']
eval_dict = {
  'STARS (essential)': [2, 0, 6, 0],
  'STARS (optional)': [0, 0, 5, 0],
  'Badges (criteria)': [3, 0, 9, 0],
  'Badges (badges)': [3, 0, 9, 0],
  'STRESS-DES': [16, 2, 3, 3],
  'ISPOR-SDM': [11, 0, 4, 3]
}
eval_wide = pd.DataFrame(eval_dict, index=col).T
eval = (eval_wide
        .melt(ignore_index=False)
        .reset_index()
        .rename(columns={'index': 'guideline',
                         'variable': 'result',
                         'value': 'count'}))

# Add percentages
eval['total'] = eval['count'].groupby(eval['guideline']).transform('sum')
eval['percent'] = eval['count'] / eval['total']
eval['percentage'] = round(eval['percent']*100, 1).astype(str) + '%'

# Create stacked bar visualisation
fig = px.bar(
  eval,
  x='percent',
  y='guideline',
  color='result',
  color_discrete_map={'fully': '#06a94d',
                      'partially': '#ffd68c',
                      'not': '#ff9999',
                      'na': '#d1dcea'},
  orientation='h',
  hover_data={
    'count': True,
    'percent': False,
    'percentage': True,
    'guideline': False,
    'result': False})
  
# Amend x axis label and ticks
fig.update_layout(xaxis = dict(
  range=[0,1],
  tickmode='array',
  tickvals=[0, 0.2, 0.4, 0.6, 0.8, 1],
  ticktext=['0%', '20%', '40%', '60%', '80%', '100%'],
  title=''))

# Amend y axis label and order, and add space between ticks and plot
fig.update_layout(yaxis=dict(
  autorange='reversed',
  title=''))
fig.update_yaxes(ticksuffix = '  ')

# Relabel legend
fig.update_layout(legend_title_text='Result')
newnames = {'fully': 'Fully met', 'partially': 'Partially met',
            'not': 'Not met', 'na': 'Not applicable'}
fig.for_each_trace(lambda t: t.update(name = newnames[t.name]))

# Show without toolbar
fig.show(config={'displayModeBar': False})
```

<sup>Context: The original study repository was evaluated against criteria from journal badges relating to how open and reproducible the model is and against guidance for sharing artefacts from the STARS framework. The original study article and supplementary materials (excluding code) were evaluated against reporting guidelines for DES models: STRESS-DES, and guidelines adapted from ISPOR-SDM.</sup>
